Type = Particles
Def
{
	EmitPerSecond = 0
	EmitPerOneShot = 0
	Initializers
	[
		{
			Type = LocationToWorldSpace
			DataOut = energy
			ValueType = Float
			Value = 1
			Name = "Convert location to world space."
			Enabled = true
			UpdateAfterInit = false
			LocationIn = location
			LocationOut = location
		}
		{
			Type = VelocityToWorldSpace
			LocationIn = location
			LocationOut = location
			Name = "Convert velocity to world space"
			Enabled = true
			UpdateAfterInit = false
			RotationIn = rot
			RotationOut = rot
			VelocityInOut = velocity
			VelocityIn = velocity
			VelocityOut = velocity
		}
		{
			Type = AddFrameOfReference
			VelocityIn = velocity
			VelocityOut = velocity
			Name = "Add frame of reference"
			Enabled = true
			VelocityInOut = velocity
			RotationIn = rot
			RotationOut = rot
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 6
		}
		{
			Type = SetWorldSpaceScale
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 512
			}
			SpriteSize
			{
				X = 128
				Y = 128
			}
			SpriteCount = 7
			SpritesPerRow = 2
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Name = ""
			Enabled = true
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 15
			ScaleOut = scale
			LocalScale = 1
		}
		{
			Type = SetRandom
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 256
			}
			SpriteSize
			{
				X = 64
				Y = 64
			}
			SpriteCount = 16
			SpritesPerRow = 4
			PixelOffset
			{
				X = 0
				Y = 0
			}
			Name = "Sprite Index"
			Enabled = true
			UpdateAfterInit = false
			DataOut = sprite_index
			ValueType = Int
			FromValue = 0
			ToValue = 15
		}
		{
			Type = UvSprites
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			Name = "Sprite UV Rect"
			Enabled = true
			UpdateAfterInit = false
			SpriteIndexIn = sprite_index
			UvRectOut = uv_rect
			TextureSize
			{
				X = 256
				Y = 256
			}
			SpriteSize
			{
				X = 64
				Y = 64
			}
			SpriteCount = 16
			SpritesPerRow = 4
			PixelOffset
			{
				X = 0
				Y = 0
			}
		}
		{
			Type = SetRandom
			DataOut = rot
			ValueType = Angle
			FromValue = 0d
			ToValue = 360d
			Name = Rotation
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Updaters
	[
		{
			Type = Lifetime
			EnergyInOut = energy
			Lifetime = 2
			Name = Lifetime
			Enabled = true
			UpdateAfterInit = false
			LifeInOut = life
		}
		{
			Type = Operator
			DataType = Vector2D
			AIn = location
			BIn = velocity
			ResultOut = location
			Operator = AddDt
			Name = "Apply velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Angle
			AIn = rot
			BIn = rot_vel
			ResultOut = rot
			Operator = AddDt
			Name = "Apply rot velocity."
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = ColorRamp
			LerpIn = life
			ColorOut = color
			Invert = false
			Colors
			[
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0.78431374
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0
				}
			]
			Name = "Alpha ramp"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Renderer
	{
		Type = StandardQuadRenderer
		LocationIn = location
		ScaleIn = scale
		RotationIn = rot
		ColorIn = color
		BaseSize
		{
			X = 1
			Y = 1
		}
		MaxScale = 1
		UVRect
		{
			X = 0
			Y = 0
			Width = 1
			Height = 1
		}
		Name = ""
		UvRectIn = uv_rect
	}
	Material
	{
		Texture
		{
			File = shrapnel_hot.png
			FixTransparentColors = false
			PreMultiplyByAlpha = false
			MipLevels = 8
		}
		TargetBlendMode
		{
			SourceRgbFactor = SourceAlpha
			DestRgbFactor = One
			RgbOperator = Add
			SourceAlphaFactor = InverseDestAlpha
			DestAlphaFactor = One
			AlphaOperator = Add
		}
		Color
		{
			Rf = 1
			Gf = 1
			Bf = 1
			Af = 1
		}
	}
	DeleteMode = Fast
	UpdatedEmittedParticles = false
	EnableMultithreading = false
	InitCapacity = 256
}
EmitterDef
{
	EmitPerSecond = 0
	EmitPerOneShot = 16
	PreInitializers
	[
		{
			Type = SetRandomCircle
			VelocityOut = velocity
			Speed
			{
				Min = 1
				Max = 5
			}
			Direction
			{
				Min = 0d
				Max = 360d
			}
			Name = "location"
			Enabled = true
			UpdateAfterInit = false
			DataOut = location
			ValueType = Vector2D
			Value
			{
				X = -0.5
				Y = 0
			}
			LocationOut = location
			Circle
			{
				Center
				{
					X = 0
					Y = 0
				}
				Radius = 0.25
			}
			Perimeter = true
		}
		{
			Type = SetRandomVelocityFromPoint
			DataOut = rot_vel
			ValueType = Angle
			FromValue = -360d
			ToValue = 360d
			Name = "Init velocity"
			Enabled = true
			UpdateAfterInit = false
			LocationIn = location
			VelocityOut = velocity
			Speed
			{
				Min = 2
				Max = 7
			}
			AwayFromPoint
			{
				X = 0
				Y = 0
			}
		}
		{
			Type = SetRandom
			DataOut = rot_vel
			ValueType = Angle
			FromValue = -999.9999d
			ToValue = 999.9999d
			Name = "Init rot velocity"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	PostInitializers[]
	UpdatedEmittedParticles = false
}
Bucket = Upper2
Delay = 0
IgnoreIntensity = false
Sharing = Global
MinIntensity = 0
IsFancy = true
DontEmitWhenOffScreen = true
DontEmitWhenOffScreenSizeInflate = 3
PenetratingBucket
UseCustomShapeForOffScreenCheck = false
MaxEmissionZoom = 3.4028235E+38
ScaleEmissionWithIntensity = false
UseRealTime = false
IsSimple = false
UnsharedRenderInWorldSpace = false
ScaleEmissionWithBeamLength = false
CaptureBackBuffer = false
Filter
{
	Ships = true
	OperationalHealth = true
	StructuralHealth = true
	OnlyPartCategories
	ExcludePartCategories
	Shields = true
	Bullets = true
	BulletCategories
	IgnoreInvulnerability = true
	Friendlies = true
	TargetedFriendlies = true
	Enemies = true
	TargetedEnemies = true
	OnlyBulletCategories
	ExcludeBulletCategories
	Self
	TargetedSelf
	Junk = true
	TargetedJunk
}
